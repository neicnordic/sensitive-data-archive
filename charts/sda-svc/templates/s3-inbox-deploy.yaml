{{- if or (or (eq "all" .Values.global.deploymentType) (eq "external" .Values.global.deploymentType) ) (not .Values.global.deploymentType) }}
{{- if eq "s3" .Values.global.inbox.storageType }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "sda.fullname" . }}-s3inbox
  labels:
    role: inbox
    app: {{ template "sda.fullname" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    component: {{ .Release.Name }}-inbox
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.s3Inbox.replicaCount }}
  revisionHistoryLimit: {{ default "3" .Values.global.revisionHistory }}
  selector:
    matchLabels:
      app: {{ template "sda.fullname" . }}-inbox
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "sda.fullname" . }}-inbox
        role: inbox
        release: {{ .Release.Name }}
      annotations:
        {{- if not .Values.global.vaultSecrets }}
        checksum/secret: {{ include (print $.Template.BasePath "/shared-secrets.yaml") . | sha256sum }}
        checksum/config: {{ include (print $.Template.BasePath "/s3-inbox-secrets.yaml") . | sha256sum }}
        {{- end }}
{{- if .Values.global.podAnnotations }}
{{- toYaml .Values.global.podAnnotations | nindent 8 -}}
{{- end }}
{{- if .Values.s3Inbox.annotations }}
{{- toYaml .Values.s3Inbox.annotations | nindent 8 -}}
{{- end }}
    spec:
      topologySpreadConstraints:
      - maxSkew: 1
        whenUnsatisfiable: DoNotSchedule
        topologyKey: kubernetes.io/hostname
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - {{ template "sda.fullname" . }}-inbox
            topologyKey: kubernetes.io/hostname
    {{- if .Values.global.rbacEnabled }}
      serviceAccountName: {{ .Release.Name }}
    {{- end }}
      securityContext:
        runAsUser: 65534
        runAsGroup: 65534
        fsGroup: 65534
    {{- if and .Values.global.pkiPermissions .Values.global.tls.enabled }}
      initContainers:
      - name: tls-init
        image: busybox
        command: ["/bin/sh", "-c"]
        args: ["/bin/cp /tls-certs/* /tls/ && chown 65534:65534 /tls/* && chmod 0600 /tls/*"]
        securityContext:
          allowPrivilegeEscalation: false
{{- if .Values.global.extraSecurityContext }}
{{- toYaml .Values.global.extraSecurityContext | nindent 10 -}}
{{- end }}
        volumeMounts:
        - name: tls-certs
          mountPath: /tls-certs
        - name: tls
          mountPath: /tls
    {{- end }}
      containers:
      - name: s3inbox
        image: "{{ .Values.image.repository }}:{{ default .Chart.AppVersion .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
        command: ["sda-s3inbox"]
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop: ["ALL"]
          runAsNonRoot: true
          seccompProfile:
            type: "RuntimeDefault"
{{- if .Values.global.extraSecurityContext }}
{{- toYaml .Values.global.extraSecurityContext | nindent 10 -}}
{{- end }}
        env:
        - name: CONFIGFILE
          value: {{ include "confFile" .}}
        ports:
        - name: inbox
          containerPort: 8000
          protocol: TCP
        livenessProbe:
{{ toYaml .Values.s3Inbox.livenessProbe | trim | indent 10 }}
        readinessProbe:
{{ toYaml .Values.s3Inbox.readinessProbe | trim | indent 10 }}
        resources:
{{ toYaml .Values.s3Inbox.resources | trim | indent 10 }}
        volumeMounts:
      {{- if and (not .Values.global.pkiService) .Values.global.tls.enabled }}
        - name: tls
          mountPath: {{ include "tlsPath" . }}
      {{- end }}
      {{- if not .Values.global.vaultSecrets }}
        - name: config
          mountPath: {{ template "configPath" . }}
        {{- if or .Values.global.auth.jwtPub .Values.global.oidc.jwtPub }}
        - name: jwt
          mountPath: {{ include "jwtPath" . }}
        {{- end }}
      {{- end }}
      volumes:
      {{- if and (not .Values.global.pkiService) .Values.global.tls.enabled }}
        - name: tls
        {{- if or .Values.global.tls.clusterIssuer .Values.global.tls.issuer }}
          secret:
            defaultMode: 0440
            secretName: {{ template "sda.fullname" . }}-inbox-certs
        {{- else }}
          secret:
            defaultMode: 0440
            secretName: {{ required "An certificate issuer or a TLS secret name is required for s3inbox" .Values.s3Ibox.tls.secretName }}
        {{- end }}
      {{- end }}
      {{- if not .Values.global.vaultSecrets }}
        - name: config
          secret:
            defaultMode: 0440
            secretName: {{ template "sda.fullname" . }}-inbox
        {{- if or .Values.global.auth.jwtPub .Values.global.oidc.jwtPub }}
        - name: jwt
          secret:
            defaultMode: 0440
            secretName: {{ ternary .Values.global.auth.jwtSecret .Values.global.oidc.jwtSecret .Values.global.auth.resignJwt }}

        {{- end }}
      {{- end }}
      restartPolicy: Always
{{- end }}
{{- end }}
