{{- if eq "isolated" .Values.global.schemaType }}
{{- if ne "" .Values.global.sync.remote.host }}
{{- if or (or (eq "all" .Values.global.deploymentType) (eq "internal" .Values.global.deploymentType) ) (not .Values.global.deploymentType) }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "sda.fullname" . }}-sync
  labels:
    role: sync
    app: {{ template "sda.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    component: {{ template "sda.fullname" . }}-sync
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: 1
  revisionHistoryLimit: {{ default "3" .Values.global.revisionHistory }}
  selector:
    matchLabels:
      app: {{ template "sda.fullname" . }}-sync
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "sda.fullname" . }}-sync
        role: sync
        release: {{ .Release.Name }}
      annotations:
  {{- if not .Values.global.vaultSecrets }}
        checksum/config: {{ include (print $.Template.BasePath "/sync-secrets.yaml") . | sha256sum }}
  {{- end }}
  {{- if .Values.global.podAnnotations }}
{{- toYaml .Values.global.podAnnotations | nindent 8 -}}
  {{- end }}
  {{- if .Values.sync.annotations }}
{{- toYaml .Values.sync.annotations | nindent 8 -}}
  {{- end }}
    spec:
  {{- if .Values.global.rbacEnabled}}
      serviceAccountName: {{ .Release.Name }}
  {{- end }}
      securityContext:
        runAsUser: 65534
        runAsGroup: 65534
        fsGroup: 65534
  {{- if and .Values.global.pkiPermissions .Values.global.tls.enabled }}
      initContainers:
      - name: tls-init
        image: busybox
        command: ["/bin/sh", "-c"]
        args: ["/bin/cp /tls-certs/* /tls/ && chown 65534:65534 /tls/* && chmod 0600 /tls/*"]
        securityContext:
          allowPrivilegeEscalation: false
    {{- if .Values.global.extraSecurityContext }}
{{- toYaml .Values.global.extraSecurityContext | nindent 10 -}}
    {{- end }}
        volumeMounts:
        - name: tls-certs
          mountPath: /tls-certs
        - name: tls
          mountPath: /tls
  {{- end }}
      containers:
      - name: sync
        image: "{{ .Values.image.repository }}:{{ default .Chart.AppVersion .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
        command: ["sda-sync"]
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop: ["ALL"]
          runAsNonRoot: true
          seccompProfile:
            type: "RuntimeDefault"
        env:
          - name: CONFIGFILE
            value: {{ include "confFile" . }}
        resources:
{{ toYaml .Values.sync.resources | trim | indent 10 }}
        volumeMounts:
      {{- if not .Values.global.vaultSecrets }}
          - name: c4gh
            mountPath: {{ template "c4ghPath" . }}
          - name: config
            mountPath: {{ template "configPath" . }}
      {{- end }}
  {{- if eq "posix" .Values.global.archive.storageType }}
          - name: archive
            mountPath: {{ .Values.global.archive.volumePath | quote }}
  {{- end }}
  {{- if and (not .Values.global.pkiService) .Values.global.tls.enabled }}
          - name: tls
            mountPath: {{ template "tlsPath" . }}
  {{- end }}
      enableServiceLinks: false
      volumes:
      {{- if and (not .Values.global.pkiService) .Values.global.tls.enabled }}
        - name: tls
        {{- if or .Values.global.tls.clusterIssuer .Values.global.tls.issuer }}
          secret:
            defaultMode: 0440
            secretName: {{ template "sda.fullname" . }}-sync-certs
        {{- else }}
          secret:
            defaultMode: 0440
            secretName: {{ required "An certificate issuer or a TLS secret name is required for sync" .Values.sync.tls.secretName }}
        {{- end }}
      {{- end }}
    {{- if not .Values.global.vaultSecrets }}
        - name: c4gh
          secret:
            defaultMode: 0440
            secretName: {{ required "A secret for the c4gh key is required" .Values.global.c4gh.secretName }}
            items:
            - key: {{ (first .Values.global.c4gh.privateKeys).keyName }}
              path: {{ (first .Values.global.c4gh.privateKeys).keyName }}
            - key: {{ .Values.global.c4gh.syncPubKey }}
              path: {{ .Values.global.c4gh.syncPubKey }}
        - name: config
          secret:
            defaultMode: 0440
            secretName: {{ template "sda.fullname" . }}-sync
    {{- end }}
  {{- if eq "posix" .Values.global.archive.storageType }}
        - name: archive
    {{- if .Values.global.archive.existingClaim }}
          persistentVolumeClaim:
            claimName: {{ .Values.global.archive.existingClaim }}
    {{- else }}
          nfs:
            server: {{ required "An archive NFS server is required" .Values.global.archive.nfsServer | quote }}
            path: {{ if .Values.global.archive.nfsPath }}{{ .Values.global.archive.nfsPath | quote }}{{ else }}{{ "/" }}{{ end }}
    {{- end }}
  {{- end }}
      restartPolicy: Always
{{- end }}
{{- end }}
{{- end }}
