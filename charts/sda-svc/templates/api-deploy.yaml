{{- if or (or (eq "all" .Values.global.deploymentType) (eq "external" .Values.global.deploymentType) ) (not .Values.global.deploymentType) }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "sda.fullname" . }}-api
  labels:
    role: api
    app: {{ template "sda.fullname" . }}-api
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    component: {{ template "sda.fullname" . }}-api
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.api.replicaCount }}
  revisionHistoryLimit: {{ default "3" .Values.global.revisionHistory }}
  selector:
    matchLabels:
      app: {{ template "sda.fullname" . }}-api
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "sda.fullname" . }}-api
        role: api
        release: {{ .Release.Name }}
      annotations:
        {{- if not .Values.global.vaultSecrets }}
        checksum/secret: {{ include (print $.Template.BasePath "/api-secrets.yaml") . | sha256sum }}
        {{- end }}
{{- if .Values.global.podAnnotations }}
{{- toYaml .Values.global.podAnnotations | nindent 8 -}}
{{- end }}
{{- if .Values.api.annotations }}
{{- toYaml .Values.api.annotations | nindent 8 -}}
{{- end }}
    spec:
      topologySpreadConstraints:
      - maxSkew: 1
        whenUnsatisfiable: DoNotSchedule
        topologyKey: kubernetes.io/hostname
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - {{ template "sda.fullname" . }}-api
            topologyKey: kubernetes.io/hostname
    {{- if .Values.global.rbacEnabled}}
      serviceAccountName: {{ .Release.Name }}
    {{- end }}
      securityContext:
        runAsUser: 65534
        runAsGroup: 65534
        fsGroup: 65534
      containers:
      - name: api
        image: "{{ .Values.image.repository }}:{{ default .Chart.AppVersion .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop: ["ALL"]
          runAsNonRoot: true
          seccompProfile:
            type: "RuntimeDefault"
{{- if .Values.global.extraSecurityContext }}
{{- toYaml .Values.global.extraSecurityContext | nindent 10 -}}
{{- end }}
        command: ["sda-api"]
        env:
        - name: CONFIGFILE
          value: {{ include "confFile" . }}
        ports:
        - name: api
          containerPort: 8080
          protocol: TCP
        livenessProbe:
{{ toYaml .Values.api.livenessProbe | trim | indent 10 }}
        readinessProbe:
{{ toYaml .Values.api.readinessProbe | trim | indent 10 }}
        resources:
{{ toYaml .Values.api.resources | trim | indent 10 }}
        volumeMounts:
    {{- if not .Values.global.vaultSecrets }}
        - name: config
          mountPath: {{ template "secretsPath" . }}
      {{- if .Values.global.api.jwtPubKeyName }}
        - name: jwt
          mountPath: {{ include "jwtPath" . }}
      {{- end }}
    {{- end }}
    {{- if .Values.global.tls.enabled }}
        - name: tls
          mountPath: {{ template "tlsPath" . }}
    {{- end }}
    {{- if eq "posix" .Values.global.inbox.storageType }}
        - name: inbox
          mountPath: "/inbox"
    {{- end }}
      volumes:
    {{- if not .Values.global.vaultSecrets }}
        - name: config
          projected:
            sources:
            - secret:
                name: {{ template "sda.fullname" . }}-api
                items:
                  - key: config.yaml
                    path: config.yaml
            - secret:
                name: {{ required "a secret containing the RBAC policy is required" .Values.global.api.rbacFileSecret }}
                items:
                  - key: rbac.json
                    path: rbac.json
        {{- if .Values.global.api.jwtPubKeyName }}
        - name: jwt
          projected:
            sources:
            - secret:
                name: {{ .Values.global.api.jwtSecret }}
                items:
                  - key: {{ .Values.global.api.jwtPubKeyName }}
                    path: {{ .Values.global.api.jwtPubKeyName }}
        {{- end }}
    {{- end }}
    {{- if and (not .Values.global.pkiService) .Values.global.tls.enabled }}
        - name: tls
        {{- if or .Values.global.tls.clusterIssuer .Values.global.tls.issuer }}
          secret:
            defaultMode: 0440
            secretName: {{ template "sda.fullname" . }}-api-certs
        {{- else }}
          secret:
            defaultMode: 0440
            secretName: {{ required "An certificate issuer or a TLS secret name is required for api" .Values.api.tls.secretName }}
        {{- end }}
    {{- end }}
      {{- if eq "posix" .Values.global.inbox.storageType }}
        - name: inbox
        {{- if .Values.global.inbox.existingClaim }}
          persistentVolumeClaim:
            claimName: {{ .Values.global.inbox.existingClaim }}
        {{- else }}
          nfs:
            server: {{ required "An inbox NFS server is required" .Values.global.inbox.nfsServer | quote }}
            path: {{ if .Values.global.inbox.nfsPath }}{{ .Values.global.inbox.nfsPath | quote }}{{ else }}{{ "/" }}{{ end }}
        {{- end }}
      {{- end }}
{{- end }}
