apiVersion: apps/v1
kind: Deployment
metadata:
  name: sda-validator-orchestrator
  labels:
    app: sda-validator-orchestrator
spec:
  selector:
    matchLabels:
      app: sda-validator-orchestrator
  template:
    metadata:
      labels:
        app: sda-validator-orchestrator
    spec:
      initContainers:
        - name: validator-downloader
          image: golang:1.25-alpine
          command: [ "/bin/sh", "-c" ]
          args:
            - wget -O /validators/100-200_word_validator.sif https://raw.githubusercontent.com/neicnordic/sensitive-data-archive/refs/heads/feature/validator-orchestrator-prototype/sda-validator/apptainer-example/100-200_word_validator.sif;
          volumeMounts:
            - name: validators
              mountPath: /validators
      containers:
        - name: sda-validator-orchestrator
          image: ghcr.io/neicnordic/sensitive-data-archive/sda-validator/orchestrator:latest
          imagePullPolicy: IfNotPresent
          env:
            - name: LOG_LEVEL
              value: "DEBUG"
            - name: API_PORT
              value: "8080"
            - name: VALIDATOR_PATHS
              value: "/validators/100-200_word_validator.sif"
            - name: SDA_API_URL
              value: "http://pipeline-sda-svc-api.default:8080"
            - name: SDA_API_TOKEN
              valueFrom:
                secretKeyRef:
                  name: sda-validator-orchestrator
                  key: sdaApiToken
            - name: BROKER_SSL
              value: "false"
            - name: BROKER_HOST
              value: "broker-sda-mq"
            - name: BROKER_PORT
              value: "5672"
            - name: BROKER_VHOST
              value: "/sda"
            - name: BROKER_EXCHANGE
              value: "sda"
            - name: BROKER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: sda-validator-orchestrator
                  key: brokerPassword
            - name: BROKER_USER
              value: "admin"
            - name: JOB_QUEUE
              value: "validation-job-queue"
            - name: JOB_PREPARATION_QUEUE
              value: "validation-job-preparation-queue"
            - name: JWT_PUB_KEY_PATH
              value: "/.secrets/jwt/"
            - name: DATABASE_HOST
              value: "postgres-sda-db"
            - name: DATABASE_PORT
              value: "5432"
            - name: DATABASE_USER
              value: "postgres"
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: sda-validator-orchestrator
                  key: pgPassword
            - name: DATABASE_SCHEMA
              value: sda_validator_orchestrator
          ports:
            - name: api
              containerPort: 8080
              protocol: TCP
          securityContext:
            runAsUser: 65534
            runAsGroup: 65534
          volumeMounts:
            - name: validators
              mountPath: /validators/
            - name: rbac
              mountPath: "/rbac"
              readOnly: true
            - mountPath: /.secrets/jwt
              name: jwt
      volumes:
        - name: validators
          emptyDir: {}
        - name: rbac
          configMap:
            name: sda-validator-orchestrator-rbac
        - name: jwt
          projected:
            defaultMode: 420
            sources:
              - secret:
                  items:
                    - key: jwt.pub
                      path: jwt.pub
                  name: jwk
