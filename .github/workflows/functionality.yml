name: Functionality tests

on:
  merge_group:
  pull_request:

jobs:
  check_changes:
    outputs:
      sda-download: ${{ steps.changes.outputs.sda-download }}
      sftp-inbox: ${{ steps.changes.outputs.sftp-inbox }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            sda-auth:
              - 'sda-auth/**'
            sda-download:
              - 'sda-download/**'
            sftp-inbox:
            - 'sda-sftp-inbox/**'

  sda-download:
    needs: check_changes
    if: needs.check_changes.outputs.sda-download == 'true'
    name: sda-download-integration-${{ matrix.storagetype }}
    runs-on: ubuntu-latest
    env:
      STORAGETYPE: ${{ matrix.storagetype }}

    strategy:
      matrix:
        storagetype: [s3, posix, s3notls]
        go-version: ['1.24']
      fail-fast: false
    steps:
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Check out code into the Go module directory
        uses: actions/checkout@v5

      - name: Run setup scripts
        run: |
          cd sda-download
          ls -1 .github/integration/setup/{common,${{ matrix.storagetype }}}/*.sh 2>/dev/null | sort -t/ -k5 -n | while read -r runscript; do
            echo "Executing setup script $runscript";
            bash -x "$runscript";
          done

      - name: Run tests
        run: |
          cd sda-download
          ls -1 .github/integration/tests/{common,${{ matrix.storagetype }}}/*.sh 2>/dev/null | sort -t/ -k5 -n | while read -r runscript; do
            echo "Executing test script $runscript";
            bash -x "$runscript";
          done

  sftp-inbox:
    needs: check_changes
    if: needs.check_changes.outputs.sftp-inbox == 'true'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5

      - name: Build image
        run: |
          cd sda-sftp-inbox
          docker build -t neicnordic/sda-inbox-sftp:latest .

      - name: Start Services
        run: |
          cd sda-sftp-inbox/dev_utils
          bash ./make_certs.sh
          docker compose up certfixer
          docker compose up -d
          sleep 20

      - name: Run test for sftp ssh connection
        run: |
          cd sda-sftp-inbox
          chmod 700 src/test/resources/id_ed25519
          sh ./dev_utils/sftp-testing-ssh.sh

      - name: Run test for sftp with password
        run: |
          cd sda-sftp-inbox
          sudo apt-get install expect -y
          sh ./dev_utils/sftp-testing-pass.sh