name: Code tests

on:
  push:
    branches-ignore: [release_v1]

jobs:

  sftp_inbox:
    strategy:
      matrix:
        java-version: [19]
      fail-fast: true
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK ${{ matrix.java-version }}
        uses: actions/setup-java@v4
        with:
          distribution: zulu
          java-version: ${{ matrix.java-version }}
      - uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Test
        run: cd sda-sftp-inbox && mvn test -B

  test_download:
    name: Test Download
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.22']
    steps:

      - name: Set up Go ${{ matrix.go-version }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v4

      - name: Get dependencies
        run: |
          cd sda-download
          go get -v -t -d ./...
          if [ -f Gopkg.toml ]; then
              curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
              dep ensure
          fi
      - name: Test
        run: |
          cd sda-download
          go test -v -coverprofile=coverage.txt -covermode=atomic ./...

      - name: Codecov
        uses: codecov/codecov-action@v4.5.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./sda-download/coverage.txt
          flags: unittests
          fail_ci_if_error: false

  test_sda:
    name: Test sensitive-data-archive
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.22']
    steps:

      - name: Set up Go ${{ matrix.go-version }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v4

      - name: Get dependencies
        run: |
          cd sda-download
          go get -v -t -d ./...
          if [ -f Gopkg.toml ]; then
              curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
              dep ensure
          fi
      - name: Test
        run: |
          cd sda
          go test -v -coverprofile=coverage.txt -covermode=atomic ./...

      - name: Codecov
        uses: codecov/codecov-action@v4.5.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./sda/coverage.txt
          flags: unittests
          fail_ci_if_error: false
