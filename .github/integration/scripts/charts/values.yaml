global:
  schemaType: "isolated"
  ingress:
    deploy: true
    hostName:
      api: api.127.0.0.1.nip.io
      auth: auth.127.0.0.1.nip.io
      download: download.127.0.0.1.nip.io
      s3Inbox: inbox.127.0.0.1.nip.io
      syncapi: sync-api.127.0.0.1.nip.io
  log:
    level: "debug"
  tls:
    enabled: false
    issuer: ""
    clusterIssuer: "cert-issuer"
  api:
    adminsFileSecret:
    adminUsers:
      - dummy@example.com
      - requester@demo.org
    jwtPubKeyName: jwt.pub
    jwtSecret: jwk
  archive:
    storageType: s3
    s3AccessKey: PLACEHOLDER_VALUE
    s3SecretKey: PLACEHOLDER_VALUE
    s3Url: "http://minio.minio"
    s3Bucket: "archive"
    s3Port: 9000
    existingClaim: archive-pvc
  backupArchive:
    storageType: "s3"
    s3AccessKey: PLACEHOLDER_VALUE
    s3SecretKey: PLACEHOLDER_VALUE
    s3Url: "http://minio.minio"
    s3Bucket: "backup"
    s3Port: 9000
    existingClaim: backup-pvc
  auth:
    jwtSecret: jwk
    jwtAlg: ES256
    jwtKey: jwt.key
    jwtPub: jwt.pub
    jwtTTL: 168
    resignJwt: true
  broker:
    durable: true
    host: "broker-sda-mq"
    port: 5672
    ssl: false
    username: "admin"
    password: PLACEHOLDER_VALUE
  cega:
    password: PLACEHOLDER_VALUE
    user: PLACEHOLDER_VALUE
  c4gh:
    secretName: c4gh
    keyFile: c4gh.sec.pem
    publicFile: c4gh.pub.pem
    passphrase: PLACEHOLDER_VALUE
    syncPubKey: c4gh.pub.pem
  db:
    host: "postgres-sda-db"
    user: "postgres"
    password: PLACEHOLDER_VALUE
  doa:
    enabled: false
  download:
    enabled: true
    trusted:
      configPath: "iss"
      configFile: "iss.json"
      iss:
        - iss: "http://oidc:8080"
          jku: "http://oidc:8080/jwks"
  oidc:
    provider: "http://oidc:8080"
    jwkPath: "/jwks"
    id: DfCieZLuBU
    secret: DfCieZLuBU
  inbox:
    storageType: s3
    s3AccessKey: PLACEHOLDER_VALUE
    s3SecretKey: PLACEHOLDER_VALUE
    s3Url: http://minio.minio
    s3Port: 9000
    s3Bucket: "inbox"
    s3ReadyPath: "/minio/health/ready"
    existingClaim: inbox-pvc
  reencrypt:
    host: reencrypt
    port: 50443
  sync:
    api:
      password: ""
      user: ""
    brokerQueue: "mapping_stream"
    centerPrefix: "SYNC"
    destination:
      storageType: "s3"
      url: "http://minio.minio"
      port: 9000
      readypath: "/minio/health/ready"
      accessKey: PLACEHOLDER_VALUE
      secretKey: PLACEHOLDER_VALUE
      bucket: "sync"
      region: "us-east-1"
    remote:
      host: ""
      port: "8080"
      password: "pass"
      user: "user"
api:
  replicaCount: 1
  resources: null
auth:
  replicaCount: 1
  resources: null
backup:
  deploy: true
  resources: null
doa:
  deploy: false
download:
  resources: null
  replicaCount: 1
finalize:
  resources: null
ingest:
  resources: null
intercept:
  deploy: false
mapper:
  resources: null
releasetest:
  run: false
s3Inbox:
  resources: null
  replicaCount: 1
sftpInbox:
  resources: null
  replicaCount: 1
verify:
  resources: null